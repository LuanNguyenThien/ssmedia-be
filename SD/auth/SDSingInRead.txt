sequenceDiagram
    participant Client as User
    participant Server as Controller
    participant AuthService as authService
    participant UserService as userService
    participant JWT as JWT

    Client->>Server: POST /login 
    activate Server
    Server->>AuthService: getAuthUserByUsername(username)
    AuthService-->>Server: existingUser
    alt User does not exist
        Server-->>Client: HTTP 400 BadRequestError()
    else User exists
        Server->>AuthService: comparePassword(password)
        AuthService-->>Server: passwordsMatch
        alt Passwords do not match
            Server-->>Client: HTTP 400 BadRequestError()
        else Passwords match
            Server->>UserService: getUserByAuthId(existingUser._id)
            UserService-->>Server: user
            Server->>JWT: sign({ userId, uId, role, email, username, avatarColor }, config.JWT_TOKEN)
            JWT-->>Server: userJwt
            Server->>Client: HTTP 200 OK { message, user, token }
        end
    end
    deactivate Server