sequenceDiagram
    participant User as User
    participant Controller as Controller
    participant AuthService as AuthService
    participant Crypto as Crypto
    participant Config as Config
    participant Template as ForgotPasswordTemplate
    participant EmailQueue as EmailQueue

    User->>Controller: POST /create (email)
    activate Controller
    Controller->>AuthService: getAuthUserByEmail(email)
    activate AuthService
    AuthService-->>Controller: existingUser
    deactivate AuthService

    alt existingUser not found
        Controller-->>User: 400 BadRequestError('Invalid credentials')
    else existingUser found
        Controller->>Crypto: randomBytes(20)
        activate Crypto
        Crypto-->>Controller: randomBytes
        deactivate Crypto

        Controller->>AuthService: updatePasswordToken(existingUser._id, randomCharacters, expirationTime)
        activate AuthService
        AuthService-->>Controller: tokenUpdated
        deactivate AuthService

        Controller->>Config: CLIENT_URL
        activate Config
        Config-->>Controller: CLIENT_URL
        deactivate Config

        Controller->>Template: passwordResetTemplate(existingUser.username, resetLink)
        activate Template
        Template-->>Controller: template
        deactivate Template

        Controller->>EmailQueue: addEmailJob('forgotPasswordEmail', { template, receiverEmail: email, subject: 'Reset your password' })
        activate EmailQueue
        EmailQueue-->>Controller: jobAdded
        deactivate EmailQueue

        Controller-->>User: 200 { message: 'Password reset email sent.' }
    end
    deactivate Controller
